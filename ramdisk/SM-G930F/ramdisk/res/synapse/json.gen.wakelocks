#!/system/bin/sh

BB=/system/xbin/busybox;

cat << CTAG
{
    name:WAKELOCKS,
    elements:[
	{ SDescription:{
		description:"WARNING: Disabling of wakelocks may have unintended impact on various ROM features, apps or hardware. Leave them default if unsure."
	}},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
		title:"Google Play Services Battery Drain Fix",
		description:"SystemUpdateService is basically Google's OTA update service, and when it detects that your phone need and update while running a Custom ROM, it fails and re-runs this check over and over again. It's this wakelock that drains your battery."
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		title:"Google Play Services",
		description:"Enable to apply fix on every boot. If Disable, then REBOOT required for stock behaviour.\n",
		default:$(echo "$(/res/synapse/actions/devtools SystemUpdateService)"),
		action:"devtools SystemUpdateService",
		values:[Enabled, Disabled,]
	}},
	{ SSpacer:{
		height:1
	}},
			`if [ -f "/sys/module/wakeup/parameters/enable_bluedroid_timer_ws" ]|| [ -f "/sys/module/wakeup/parameters/enable_sensorhub_ws" ] || [ -f "/sys/module/wakeup/parameters/enable_ssp_ws" ] || [ -f "/sys/module/wakeup/parameters/enable_wlan_ctrl_wake_ws" ] || [ -f "/sys/module/wakeup/parameters/enable_wlan_rx_wake_ws" ] || [ -f "/ssys/module/wakeup/parameters/enable_wlan_wake_ws"]; then
				$BB echo '{ SPane:{
					title:"SensorHub",
					description:"WARNING: Disabling of wakelocks may have impact on various ROM features or apps such as S-Health & Google Fit.\n"
				}},'
				if [ -f "/sys/module/wakeup/parameters/enable_sensorhub_ws" ]; then
					SHW=\`$BB cat /sys/module/wakeup/parameters/enable_sensorhub_ws\`
					$BB echo '{ SOptionList:{
						title:"SensorHub",
						description:"SensorHub Wakelock is one of the biggest wake sources. Disable for better deep sleep and less awake time. Enable for stock behavior.\n",
						default:'$SHW',
						action:"generic sys/module/wakeup/parameters/enable_sensorhub_ws",
						values:{ Y:"Enabled", N:"Disabled"
						}
					}},'
					$BB echo '{ SSpacer:{
						height:1
					}},'
				fi
				if [ -f "/sys/module/wakeup/parameters/enable_bluedroid_timer_ws" ]; then
					BTW=\`$BB cat /sys/module/wakeup/parameters/enable_bluedroid_timer_ws\`
					$BB echo '{ SSeekBar:{
						title:"bluedroid_timer",
						description:"Bluedroid wakelock\n",
						default:'$BTW',
						values:{ Y:"Enabled", N:"Disabled"
						}
						action:"generic sys/module/wakeup/parameters/enable_bluedroid_timer_ws"
					}},'
					$BB echo '{ SSpacer:{
						height:1
					}},'
				fi
				if [ -f "/sys/module/wakeup/parameters/enable_ssp_ws" ]; then
					SSP=\`$BB cat /sys/module/wakeup/parameters/enable_ssp_ws\`
					$BB echo '{ SOptionList:{
						title:"SSP",
						description:"The SSP Wakelock is one of the biggest wake sources after Sensorhub. Disable for better deep sleep and less awake time. Enable for stock behavior.\n",
						default:'$SSP',
						action:"generic sys/module/wakeup/parameters/enable_ssp_ws",
						values:{ Y:"Enabled", N:"Disabled"
						}
					}},'
					$BB echo '{ SSpacer:{
						height:1
					}},'
				fi
				if [ -f "/sys/module/wakeup/parameters/enable_wlan_ctrl_wake_ws" ]; then
					WCW=\`$BB cat /sys/module/wakeup/parameters/enable_wlan_ctrl_wake_ws\`
					$BB echo '{ SSeekBar:{
						title:"enable_wlan_ctrl_wake_ws",
						description:"Wlan ctrl wakelock\n",
						default:'$WCW',
						values:{ Y:"Enabled", N:"Disabled"
						}
						action:"generic sys/module/wakeup/parameters/enable_wlan_ctrl_wake_ws"
					}},'
					$BB echo '{ SSpacer:{
						height:1
					}},'
				fi
				if [ -f "/sys/module/wakeup/parameters/enable_wlan_rx_wake_ws" ]; then
					WRW=\`$BB cat /sys/module/wakeup/parameters/enable_wlan_rx_wake_ws\`
					$BB echo '{ SSeekBar:{
						title:"enable_wlan_rx_wake_ws",
						description:"Wlan RX wakelock\n",
						default:'$WRW',
						values:{ Y:"Enabled", N:"Disabled"
						}
						action:"generic sys/module/wakeup/parameters/enable_wlan_rx_wake_ws"
					}},'
					$BB echo '{ SSpacer:{
						height:1
					}},'
				fi
				if [ -f "/sys/module/wakeup/parameters/enable_wlan_wake_ws" ]; then
					WWW=\`$BB cat /sys/module/wakeup/parameters/enable_wlan_wake_ws\`
					$BB echo '{ SSeekBar:{
						title:"enable_wlan_wake_ws",
						description:"Wlan Wake wakelock\n",
						default:'$WWW',
						values:{ Y:"Enabled", N:"Disabled"
						}
						action:"generic sys/module/wakeup/parameters/enable_wlan_wake_ws"
					}},'
					$BB echo '{ SSpacer:{
						height:1
					}},'
				fi

			fi`
    ]
}
CTAG
